macro = ; 

if(!argnumber) quote GIVE THE TREATMENT NAME AS FIRST ARGUMENT; proc/; end

lquote [ ;

hold 100/1000;
outgr Rastrop; 

taxonomy + ;
reroot;
tv > ; 



/*
var : borrame esta ;
loop 0 200
	set borrame getrandom[0 ntax] ;
	set esta getrandom[0 nchar] ;
	xread ='esta' 'borrame' ? ;
	stop
*/

var - ; 


/* ====================================================================================================== *\
|   Isolate the effect of dependence from that of missind data												|
|																											|
|	The procedure consists of iteratively replacing missing data and polymorphisms.							|
|	by one of the observed states. Cell replacement is done by any of the states in the polymorphic cell	|
|	or any state within the character in the case of missing entries										|
|																											|
|	The results are summarised in strict and majority consensus												|
\* ======================================================================================================= */


/*

1. contar la cantidad de missing entries ('misamount')
2. dividir el total en 10 ('threshold')
3. seteo a 0 el contador de celdas a reemplazar ('cellcount')
4. loop por el total de celdas:
5. encuentro una celda missing ('cell_state')
6. reemplazo al azar por estado
7. cuento la cantidad de celdas reemplazadas
8. la cantidad de reemplazos es igual al ith/10th total de missing celdas?
9. si es "si", adiciono "i" a "i"
10. Realizo bÃºsquedas y evalÃºo la mÃ©trica
11. Si "i" es igual al total de missing celdas 'm', termino el test. Caso contrario, repito pasos 4 al 10. 

*/
var :
misamount 
threshold
cellcount
cell_state
ttx
ccx
replacement
trf
tsimil
;

set misamount 0; /* 1 */
loop =tx 0 ntax
	loop =cx 0 nchar
		if(states[#cx #tx] == missing) set misamount ++ ; end
		stop
	stop

set threshold 'misamount'/100 ;


quote MISSING ENTRIES='misamount' THRESHOLD ='/.0threshold';

collapse tbr ; 
set cellcount 0;

tgr - . ;
sil = all;
quote :TREATMENT, REPLACED, DISTORTION_COEFFICIENT, RF;
	loop =tx 0 ntax
		set ttx #tx;
			
		loop =cx 0 nchar
		set ccx #cx;
			
			if(states['ccx' 'ttx'] == missing)
				set replacement getrandom[0 (maxstate['ccx'])] ;
				xread ='ccx' 'ttx' 'replacement' ;
				set cellcount ++ ;
				
						if('cellcount' == ('/.0threshold'))

							quote &10 - ACTIONS:;
							set threshold += ('misamount'/100) ;

							k0 ; agr - 0 ;
							mult 10 = tbr ;
							pcrprune /\ >0; pruntax /{0}; 
							unique; ne * ; tch/ ;
							tv > . ;

								tv < 0 ; /* this is the taxonomy tree */
								loop =tcheck 0 ntax 
									if(!isintree[0 #tcheck]) pruntax 1/#tcheck ; end
									stop
								
								set tsimil symcoeff 0/1;
								set trf rrfdistp 0/1;
								quote :%1, 'cellcount', '/.3tsimil', '/.3trf'; 
								
							end

				end

			stop
		stop

sil - all ;
collapse rule1;

p/;