macro = ; 

var : borrame esta ;
loop 0 200
	set borrame getrandom[0 ntax] ;
	set esta getrandom[0 nchar] ;
	xread ='esta' 'borrame' ? ;
	stop

var - ; 
xread*;

/* ====================================================================================================== *\
|   Isolate the effect of dependence from that of missind data												|
|																											|
|	The procedure consists of iteratively replacing missing data and polymorphisms.							|
|	by one of the observed states. Cell replacement is done by any of the states in the polymorphic cell	|
|	or any state within the character in the case of missing entries										|
|																											|
|	The results are summarised in strict and majority consensus												|
\* ======================================================================================================= */


/*

1. contar la cantidad de missing entries ('misamount')
2. dividir el total en 10 ('threshold')
3. seteo a 0 el contador de celdas a reemplazar ('cellcount')
4. loop por el total de celdas:
5. encuentro una celda missing ('cell_state')
6. reemplazo al azar por estado
7. cuento la cantidad de celdas reemplazadas
8. la cantidad de reemplazos es igual al ith/10th total de missing celdas?
9. si es "si", adiciono "i" a "i"
10. Realizo búsquedas y evalúo la métrica
11. Si "i" es igual al total de missing celdas 'm', termino el test. Caso contrario, repito pasos 4 al 10. 

*/
var :
misamount 
threshold
cellcount
cell_state
;

set misamount 0; /* 1 */
loop =tx 0 ntax
	loop =cx 0 nchar
		if(state[#cx #tx] == missing) set misamount ++ ; end
		stop
	stop

set threshold 'misamount'/10 ;

set cellcount 0;
loop =rep 1 'misamount'
	if('threshold' < 'misamount')

			set ttx getrandom[0 ntax];
			set ccx getrandom[0 nchar];
	
				if(state['ccx' 'ttx'] == missing)
					set replacement getrandom[0 (maxstate['ccx'])] ;
					xread ='ccx' 'ttx' 'replacement' ;
					set cellcount ++ ;
									if('cellcount' == ('threshold'))
											set threshold += 'threshold' ;
										else
											setloop #rep ;
										end					
					else
						setloop #rep ;
					end

		end
	stop